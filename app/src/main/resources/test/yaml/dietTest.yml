class: DietFactoryImpl
support: Diet
interface : DietFactory
imports: "
  import static tesi.unibo.dynamic.Diet.Nutrient.*;\n
  import static org.junit.jupiter.api.Assertions.*;\n
  import java.util.Map;\n
	import org.junit.jupiter.api.BeforeEach;\n
	import org.junit.jupiter.api.Test;"
code: "
  private DietFactory factory;\n
	\n
	@BeforeEach\n
	public void initFactory() {\n
		this.factory = new DietFactoryImpl();\n
	}\n
	\n
	private void fillProducts(Diet diet) {\n
		diet.addFood(\"pasta\", Map.of(CARBS,280,PROTEINS,70,FAT,50)); // 400 calories overall\n
		diet.addFood(\"riso\", Map.of(CARBS,250,PROTEINS,70,FAT,30));  // 350 calories overall\n
		diet.addFood(\"pollo\", Map.of(CARBS,10,PROTEINS,60,FAT,30));  // 100 calories overall\n
		diet.addFood(\"insalata\", Map.of(CARBS,10,PROTEINS,3,FAT,2)); // 15 calories overall\n
		diet.addFood(\"broccoli\", Map.of(CARBS,20,PROTEINS,10,FAT,5));// 35 calories overall\n
		diet.addFood(\"grana\", Map.of(CARBS,0,PROTEINS,200,FAT,200)); // 400 calories overall\n
	}\n
	\n
	@Test\n
	public void testStandard() {\n
		var diet = this.factory.standard();\n
		this.fillProducts(diet);\n
		assertTrue(diet.isValid(Map.of(\"pasta\",200.0,\"pollo\",300.0,\"grana\",200.0)), \n
		\"calories is 1900\"); // 800+300+800 calories\n
		assertFalse(diet.isValid(Map.of(\"pasta\",200.0,\"pollo\",300.0,\"grana\",50.0))); // 800+300+200 calories: too low!!\n
		assertFalse(diet.isValid(Map.of(\"pasta\",300.0,\"pollo\",300.0,\"grana\",200.0,\"broccoli\",300.0))); // 1200+300+800+105 calories: too much!!\n
	}\n
	\n
	@Test\n
	public void testLowCarb() {\n
		var diet = this.factory.lowCarb();\n
		this.fillProducts(diet);\n
		assertTrue(diet.isValid(Map.of(\"pollo\",1000.0)), \n
		\"calories is 1000 and carbs is 100\"); // ok calories, ok carbs\n
		assertFalse(diet.isValid(Map.of(\"pasta\",200.0,\"pollo\",300.0,\"grana\",200.0))); // 800+300+800 calories, too much!\n
		assertFalse(diet.isValid(Map.of(\"pasta\",400.0))); // ok calories, but too much carbs\n
	}\n
	\n
	@Test\n
	public void testHighProtein() {\n
		var diet = this.factory.highProtein();\n
		this.fillProducts(diet);\n
		assertTrue(diet.isValid(Map.of(\"pollo\",2500.0)), \n
		\"calories is 2500, carbs is 250, protein is 1500\"); // ok calories, ok proteins\n
		assertFalse(diet.isValid(Map.of(\"pasta\",200.0,\"pollo\",300.0,\"grana\",200.0))); // 800+300+800 calories, too few!\n
		assertFalse(diet.isValid(Map.of(\"grana\",500.0))); // ok calories, but too few proteins\n
	}\n
	\n
	@Test\n
	public void testBalanced() {\n
		var diet = this.factory.balanced();\n
		this.fillProducts(diet);\n
		assertTrue(diet.isValid(Map.of(\"pasta\", 200.0, \"pollo\", 400.0, \"grana\", 100.0, \"broccoli\", 300.0))); // OK\n
		assertFalse(diet.isValid(Map.of(\"pasta\",200.0,\"pollo\",300.0,\"grana\",200.0)));\n
		assertFalse(diet.isValid(Map.of(\"pollo\",1000.0)));\n
		assertFalse(diet.isValid(Map.of(\"pollo\",2000.0)));\n
	}\n"